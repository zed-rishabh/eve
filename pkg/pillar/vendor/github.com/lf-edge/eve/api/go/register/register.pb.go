// Copyright(c) 2017-2018 Zededa, Inc.
// All rights reserved.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.2
// source: register/register.proto

package register

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// XXX is this used? Not in client.go; deprecate
type ZRegisterResult int32

const (
	ZRegisterResult_ZRegNone        ZRegisterResult = 0
	ZRegisterResult_ZRegSuccess     ZRegisterResult = 1
	ZRegisterResult_ZRegNotActive   ZRegisterResult = 2
	ZRegisterResult_ZRegAlreadyDone ZRegisterResult = 3
	ZRegisterResult_ZRegDeviceNA    ZRegisterResult = 4
	ZRegisterResult_ZRegFailed      ZRegisterResult = 5
)

// Enum value maps for ZRegisterResult.
var (
	ZRegisterResult_name = map[int32]string{
		0: "ZRegNone",
		1: "ZRegSuccess",
		2: "ZRegNotActive",
		3: "ZRegAlreadyDone",
		4: "ZRegDeviceNA",
		5: "ZRegFailed",
	}
	ZRegisterResult_value = map[string]int32{
		"ZRegNone":        0,
		"ZRegSuccess":     1,
		"ZRegNotActive":   2,
		"ZRegAlreadyDone": 3,
		"ZRegDeviceNA":    4,
		"ZRegFailed":      5,
	}
)

func (x ZRegisterResult) Enum() *ZRegisterResult {
	p := new(ZRegisterResult)
	*p = x
	return p
}

func (x ZRegisterResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ZRegisterResult) Descriptor() protoreflect.EnumDescriptor {
	return file_register_register_proto_enumTypes[0].Descriptor()
}

func (ZRegisterResult) Type() protoreflect.EnumType {
	return &file_register_register_proto_enumTypes[0]
}

func (x ZRegisterResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ZRegisterResult.Descriptor instead.
func (ZRegisterResult) EnumDescriptor() ([]byte, []int) {
	return file_register_register_proto_rawDescGZIP(), []int{0}
}

//Â This is the request payload for POST /api/v1/edgeDevice/register
// ZRegisterMsg carries the pem-encoded device certificate plus additional
// identifying information such as device serial number(s).
// The message is assumed to be protected by a TLS session bound to the
// onboarding certificate.
type ZRegisterMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnBoardKey string `protobuf:"bytes,1,opt,name=onBoardKey,proto3" json:"onBoardKey,omitempty"` // deprecated
	PemCert    []byte `protobuf:"bytes,2,opt,name=pemCert,proto3" json:"pemCert,omitempty"`
	Serial     string `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`
	SoftSerial string `protobuf:"bytes,4,opt,name=softSerial,proto3" json:"softSerial,omitempty"`
}

func (x *ZRegisterMsg) Reset() {
	*x = ZRegisterMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_register_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZRegisterMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZRegisterMsg) ProtoMessage() {}

func (x *ZRegisterMsg) ProtoReflect() protoreflect.Message {
	mi := &file_register_register_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZRegisterMsg.ProtoReflect.Descriptor instead.
func (*ZRegisterMsg) Descriptor() ([]byte, []int) {
	return file_register_register_proto_rawDescGZIP(), []int{0}
}

func (x *ZRegisterMsg) GetOnBoardKey() string {
	if x != nil {
		return x.OnBoardKey
	}
	return ""
}

func (x *ZRegisterMsg) GetPemCert() []byte {
	if x != nil {
		return x.PemCert
	}
	return nil
}

func (x *ZRegisterMsg) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *ZRegisterMsg) GetSoftSerial() string {
	if x != nil {
		return x.SoftSerial
	}
	return ""
}

// XXX is this used? Not in client.go; deprecate
type ZRegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ZRegisterResult `protobuf:"varint,2,opt,name=result,proto3,enum=org.lfedge.eve.register.ZRegisterResult" json:"result,omitempty"`
}

func (x *ZRegisterResp) Reset() {
	*x = ZRegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_register_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZRegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZRegisterResp) ProtoMessage() {}

func (x *ZRegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_register_register_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZRegisterResp.ProtoReflect.Descriptor instead.
func (*ZRegisterResp) Descriptor() ([]byte, []int) {
	return file_register_register_proto_rawDescGZIP(), []int{1}
}

func (x *ZRegisterResp) GetResult() ZRegisterResult {
	if x != nil {
		return x.Result
	}
	return ZRegisterResult_ZRegNone
}

var File_register_register_proto protoreflect.FileDescriptor

var file_register_register_proto_rawDesc = []byte{
	0x0a, 0x17, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6f, 0x72, 0x67, 0x2e, 0x6c,
	0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x5a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x65, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x66, 0x74, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x66, 0x74, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x51, 0x0a, 0x0d, 0x5a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65,
	0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x5a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x7a, 0x0a, 0x0f, 0x5a, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x5a,
	0x52, 0x65, 0x67, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x5a, 0x52, 0x65,
	0x67, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x5a, 0x52,
	0x65, 0x67, 0x4e, 0x6f, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x5a, 0x52, 0x65, 0x67, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x44, 0x6f, 0x6e, 0x65,
	0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x5a, 0x52, 0x65, 0x67, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x41, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x5a, 0x52, 0x65, 0x67, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0x05, 0x42, 0x41, 0x0a, 0x17, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64,
	0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5a,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x66, 0x2d, 0x65,
	0x64, 0x67, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_register_register_proto_rawDescOnce sync.Once
	file_register_register_proto_rawDescData = file_register_register_proto_rawDesc
)

func file_register_register_proto_rawDescGZIP() []byte {
	file_register_register_proto_rawDescOnce.Do(func() {
		file_register_register_proto_rawDescData = protoimpl.X.CompressGZIP(file_register_register_proto_rawDescData)
	})
	return file_register_register_proto_rawDescData
}

var file_register_register_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_register_register_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_register_register_proto_goTypes = []interface{}{
	(ZRegisterResult)(0),  // 0: org.lfedge.eve.register.ZRegisterResult
	(*ZRegisterMsg)(nil),  // 1: org.lfedge.eve.register.ZRegisterMsg
	(*ZRegisterResp)(nil), // 2: org.lfedge.eve.register.ZRegisterResp
}
var file_register_register_proto_depIdxs = []int32{
	0, // 0: org.lfedge.eve.register.ZRegisterResp.result:type_name -> org.lfedge.eve.register.ZRegisterResult
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_register_register_proto_init() }
func file_register_register_proto_init() {
	if File_register_register_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_register_register_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZRegisterMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_register_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZRegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_register_register_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_register_register_proto_goTypes,
		DependencyIndexes: file_register_register_proto_depIdxs,
		EnumInfos:         file_register_register_proto_enumTypes,
		MessageInfos:      file_register_register_proto_msgTypes,
	}.Build()
	File_register_register_proto = out.File
	file_register_register_proto_rawDesc = nil
	file_register_register_proto_goTypes = nil
	file_register_register_proto_depIdxs = nil
}
